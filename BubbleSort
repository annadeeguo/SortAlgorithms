public class Sort {
	
	public static void BubbleSort (int[] a, int n ) {
		int j, k = n;
	    boolean flag = true;//发生了交换就为true, 没发生就为false，第一次判断时必须标志位true。
	    while (flag){
	        flag=false;//每次开始排序前，都设置flag为未排序过
	        for(j=1; j<k; j++){
	            if(a[j-1] > a[j]){//前面的数字大于后面的数字就交换
	                //交换a[j-1]和a[j]
	                int temp;
	                temp = a[j-1];
	                a[j-1] = a[j];
	                a[j]=temp;

	                //表示交换过数据;
	                flag = true;
	            }
	        }
	        k--;//减小一次排序的尾边界
	    }//end while

	}
	
	public static void BubbleSort2 (int[] a, int n ) {
		int j, k;
	    int flag = n; //flag来记录最后交换的位置，也就是排序的尾边界
	    while (flag > 0 ){ 
	    		k = flag; //k 来记录遍历的尾边界
	        flag=0;
	        
	        for(j=1; j<k; j++){
	            if(a[j-1] > a[j]){//前面的数字大于后面的数字就交换
	                //交换a[j-1]和a[j]
	                int temp;
	                temp = a[j-1];
	                a[j-1] = a[j];
	                a[j]=temp;

	                //表示交换过数据;
	                flag = j;//记录最新的尾边界.
	            }
	        }
	        k--;//减小一次排序的尾边界
	    }//end while

	}
	

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr = {1,1,2,0,9,3,12,7,8,3,4,65,22};
		
		//BubbleSort(arr, arr.length);
		BubbleSort2(arr, arr.length);
	    for(int i:arr){
	        System.out.print(i+",");
	    }

	}

}
